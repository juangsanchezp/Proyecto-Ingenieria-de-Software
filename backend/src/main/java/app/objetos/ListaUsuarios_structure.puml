@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "app.objetos.ListaUsuarios",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1379517809 { 
   	label=archivosjson
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   ProductosJSON580725052[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProductosJSON</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ cargar(archivo: String): List&lt;Producto&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ guardar(productos: List&lt;Producto&gt;, archivo: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UsuariosJSON580725052[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UsuariosJSON</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ cargar(archivo: String): List&lt;Usuario&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ guardar(usuarios: List&lt;Usuario&gt;, archivo: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1659632566 { 
   	label=objetos
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   ListaProductos1883495805[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListaProductos</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   productos: LinkedList&lt;Producto&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   urlJson: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ actualizarProducto(productoActualizado: Producto)</TD></TR>
<TR><TD ALIGN="LEFT" >+ agregarProducto(producto: Producto)</TD></TR>
<TR><TD ALIGN="LEFT" >+ buscarProducto(idProducto: int): Producto</TD></TR>
<TR><TD ALIGN="LEFT" >+ eliminarProducto(producto: Producto)</TD></TR>
<TR><TD ALIGN="LEFT" >- generarNuevoId(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ procesarImagen(imagen: MultipartFile): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ListaUsuarios1883495805[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ListaUsuarios</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   urlJson: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   usuarios: LinkedList&lt;Usuario&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ agregarUsuario(usuario: Usuario): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ buscarUsuario(nombreUsuario: String): Usuario</TD></TR>
<TR><TD ALIGN="LEFT" >+ eliminarUsuario(usuario: Usuario)</TD></TR>
<TR><TD ALIGN="LEFT" >+ existeUsuario(nombreUsuario: String, contrasena: String): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Producto1883495805[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Producto</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   cantidadDisponible: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   categoria: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   descripcion: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   imagenUrl: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nombreProducto: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   precio: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   proveedorUsuario: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Usuario1883495805[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Usuario</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   apellido: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   carritoProductos: ListaProductos [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   contrasena: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   correo: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nombre: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   nombreUsuario: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1714548649 { 
   	label=controllers
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   UsuarioController842536970[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UsuarioController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   listaUsuarios: ListaUsuarios [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ agregarUsuario(usuario: Usuario): ResponseEntity&lt;Usuario&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ eliminarUsuario(nombreUsuario: String): ResponseEntity&lt;Void&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ login(userLogin: Usuario): ResponseEntity&lt;Usuario&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ registrar(nuevoUsuario: Usuario): ResponseEntity&lt;String&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
ListaProductos1883495805 -> Producto1883495805[label="productos
[0..*]"];
ListaUsuarios1883495805 -> Usuario1883495805[label="usuarios
[0..*]"];
Usuario1883495805 -> ListaProductos1883495805[label="carritoProductos
[0..1]"];
UsuarioController842536970 -> ListaUsuarios1883495805[label="listaUsuarios
[0..1]"];
    
}
@enduml